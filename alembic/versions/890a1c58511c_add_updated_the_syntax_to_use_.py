"""[add] Updated the syntax to use sqlalchemy v2.x +; Added Enrollment table

Revision ID: 890a1c58511c
Revises: beb2a3aa61ae
Create Date: 2025-11-01 13:05:42.967098

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "890a1c58511c"
down_revision: Union[str, Sequence[str], None] = "2b4913966484"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    op.drop_table("student_courses")
    op.add_column("enrollments", sa.Column("student_id", sa.Integer(), nullable=False))
    op.drop_constraint(op.f("uix_student_course"), "enrollments", type_="unique")
    op.create_unique_constraint(
        "uix_student_course", "enrollments", ["student_id", "course_id"]
    )
    op.drop_constraint(
        op.f("enrollments_matric_no_fkey"), "enrollments", type_="foreignkey"
    )
    op.create_foreign_key(None, "enrollments", "students", ["student_id"], ["id"])
    op.drop_column("enrollments", "matric_no")


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "enrollments",
        sa.Column(
            "matric_no", sa.VARCHAR(length=20), autoincrement=False, nullable=False
        ),
    )
    op.drop_constraint(None, "enrollments", type_="foreignkey")  # type: ignore
    op.create_foreign_key(
        op.f("enrollments_matric_no_fkey"),
        "enrollments",
        "students",
        ["matric_no"],
        ["matric_no"],
    )
    op.drop_constraint("uix_student_course", "enrollments", type_="unique")
    op.create_unique_constraint(
        op.f("uix_student_course"),
        "enrollments",
        ["matric_no", "course_id"],
        postgresql_nulls_not_distinct=False,
    )
    op.drop_column("enrollments", "student_id")
    op.create_table(
        "student_courses",
        sa.Column("student_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("course_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["course_id"], ["courses.id"], name=op.f("student_courses_course_id_fkey")
        ),
        sa.ForeignKeyConstraint(
            ["student_id"],
            ["students.id"],
            name=op.f("student_courses_student_id_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "student_id", "course_id", name=op.f("student_courses_pkey")
        ),
    )
